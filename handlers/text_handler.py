from aiogram import types
from misc import dp,bot
import asyncio
from .sqlit import get_info_key,get_info_fav
from .find_mov import find_m
from .generate_markup import subscription_markup, check_subscription
from config import films,url_admin

@dp.message_handler(content_types='text')
async def all_other_messages(message: types.message):
    if await check_subscription(message.chat.id) == True:
        if message.text == "–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ üîé":
            photo = open("img/main.jpg", 'rb')
            await bot.send_photo(message.chat.id, photo=photo, caption="""<b>–í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ üîé</b> \n\n–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∞...""")

        elif message.text == "–§–∏–ª—å–º –∏–∑ –¢–∏–∫–¢–æ–∫ üé¨":
            await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞</b>")

        elif message.text == "–°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä üéä":
            for f in films:
                markup = types.InlineKeyboardMarkup()
                bat_a = types.InlineKeyboardButton(text='üñ• –°–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º', url=f[1])
                bat_b = types.InlineKeyboardButton(text='‚≠êÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data=f'iz_{f[1][46:]}')
                markup.add(bat_a)
                markup.add(bat_b)
                with open(f[0], 'rb') as photo:
                    await bot.send_photo(message.chat.id, photo=photo,caption=f[2],reply_markup=markup)

        elif message.text == "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ ‚ù§Ô∏è":
            fav_txt = ""
            data_f = get_info_fav(message.chat.id)
            for f in data_f:
                fav_txt += f"<a href = '{f[1]}'>" + f"üëâüèª {f[2]}..." + "</a>" + "\n"

            markup = types.InlineKeyboardMarkup()
            bat_a = types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –≤—Å–µ', callback_data='del_fav')
            markup.add(bat_a)
            photo = open("img/main.jpg", 'rb')
            await bot.send_photo(message.chat.id, photo=photo, caption=f"""<b>–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ-—Ç–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ? \n\n{fav_txt}\n–§–∏–ª—å–º—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º </b>""",reply_markup=markup)

        #
        # elif message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚öôÔ∏è":
        #     markup = types.InlineKeyboardMarkup()
        #     bat_a = types.InlineKeyboardButton(text='üë®üèª‚Äçüíª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', url=url_admin)
        #     markup.add(bat_a)
        #     photo = open("img/main.jpg", 'rb')
        #     await bot.send_photo(message.chat.id, photo=photo,caption="""<b>–ö—Ä–∞—Ç–∫–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Å—Ç–µ–Ω–¥ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞ üé•</b>\n\n0\n\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É""",reply_markup=markup)

        elif message.text == "FAQ ?":
            await message.answer("–ï—Å–ª–∏ –í—ã –≤–ª–∞–¥–µ–ª–µ—Ü –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤ –∏–ª–∏ –µ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å, –ø—Ä–æ—Å–∏–º –í–∞—Å —É—á–µ—Å—Ç—å, —á—Ç–æ –≤—Å–µ —Å—Å—ã–ª–∫–∏ –≤ –±–æ—Ç–µ –±–µ—Ä—É—Ç—Å—è –∏–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, —Å–∞–π—Ç–æ–≤, –≤–∏–¥–µ–æ-—Ö–æ—Å—Ç–∏–Ω–≥–æ–≤. –ú—ã –Ω–µ –∏–º–µ–µ–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ø–æ —ç—Ç–∏–º —Å—Å—ã–ª–∫–∞–º. \n\n–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –ø–æ–∏—Å–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã.")
        else:
            info = (get_info_key(message.text))
            if len(info) != 0:
                await message.answer(f"{message.text} - {info[0][2]}")

            else:
                await find_m(message)
    else:
        photo = open("img/main.jpg", 'rb')
        await bot.send_photo(message.chat.id, photo=photo,caption="""<b>‚≠êÔ∏è –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ö–ò–ù–û–ë–û–¢–ê, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏—Ö —Å–ø–æ–Ω—Å–æ—Ä–æ–≤:</b>""",reply_markup=subscription_markup())


@dp.message_handler(content_types='photo')
async def all_fdsfdsessages(message: types.message):
    pass